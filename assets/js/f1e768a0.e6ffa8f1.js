"use strict";(self.webpackChunkzhuddan_github_io=self.webpackChunkzhuddan_github_io||[]).push([[9061],{7126:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"mini/bluetooth","title":"\u84dd\u7259\u6a21\u5757","description":"\u4ee5 uni-app \u4e3a\u4f8b","source":"@site/archived/mini/bluetooth.md","sourceDirName":"mini","slug":"/mini/bluetooth","permalink":"/docs/mini/bluetooth","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"To be Improved","permalink":"/docs/tags/to-be-improved"}],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"tags":["To be Improved"]},"sidebar":"archived","previous":{"title":"\u66f4\u65b0\u68c0\u6d4b","permalink":"/docs/mini/update"},"next":{"title":"socket","permalink":"/docs/mini/socket"}}');var r=t(6070),i=t(6599);const c={sidebar_position:2,tags:["To be Improved"]},a="\u84dd\u7259\u6a21\u5757",s={},d=[];function l(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"\u84dd\u7259\u6a21\u5757",children:"\u84dd\u7259\u6a21\u5757"})}),"\n",(0,r.jsxs)(n.p,{children:["\u4ee5 ",(0,r.jsx)(n.code,{children:"uni-app"})," \u4e3a\u4f8b"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { hideLoading, isAndroid, showLoading, showToastError, throttle } from '@cloud/shared'\nimport { defineStore } from 'pinia'\nimport { computed, reactive, ref, watch } from 'vue'\n\nexport interface DeviceType extends UniNamespace.BluetoothDeviceInfo {\n  macAddress?: string\n}\n/**\n * \u5904\u7406\u9519\u8bef\n * @param e\n */\nfunction handleError(e: any) {\n  const err = e?.errMsg || e?.msg || e?.message || ''\n  showToastError(err)\n  throw e\n}\n\n/**\n *\n * @param buffer ArrayBuffer\u8f6c16\u8fdb\u5ea6\u5b57\u7b26\u4e32\u793a\u4f8b\n */\nfunction ab2hex(buffer: any) {\n  const hexArr = Array.prototype.map.call(new Uint8Array(buffer), (bit) => {\n    return `00${bit.toString(16)}`.slice(-2)\n  })\n  return hexArr.join('')\n}\n\nexport const useBluetoothStore = defineStore('bluetooth', () => {\n  /**\n   * \u4f53\u6e29\u67aa\u9ed8\u8ba4\u540d\u5b57\n   */\n  const DEVICE_NAME = 'BLUETOOTH BP'\n  /**\n   * \u5e73\u53f0\n   */\n  const platform = uni.getSystemInfoSync().platform\n  /**\n   * \u662f\u5426\u662f\u5f00\u53d1\u73af\u5883\n   */\n  const isDevtools = platform === 'devtools'\n\n  /**\n   * \u662f\u5426\u8fde\u63a5\n   */\n  const connected = ref(false)\n  /**\n   * \u8bbe\u5907\u5217\u8868\n   */\n\n  const devices = ref<DeviceType[]>([])\n\n  const macRecord = reactive<Record<string, string>>({})\n\n  /**\n   * \u8bbe\u5907 \u6309\u7167\u4fe1\u53f7\u5f3a\u5ea6\u6392\u5e8f \u548c \u8bbe\u5907\u540d\u79f0\u6392\u5e8f\n   */\n  const devicesSortBySignal = computed(() => {\n    // console.log('devices.value.map(e => e.name)', devices.value.map(e => e.name));\n    return devices.value.sort((a, b) => Math.abs(a.RSSI) - Math.abs(b.RSSI))\n      .filter((d) => {\n        return (d.name?.toLocaleUpperCase() === DEVICE_NAME) || (d.localName?.toLocaleUpperCase() === DEVICE_NAME)\n      })\n      .sort((a, b) => {\n        if ((a.name).toLocaleUpperCase() === DEVICE_NAME && b.name.toLocaleUpperCase() !== DEVICE_NAME) {\n          return -1\n        }\n        else if ((a.name).toLocaleUpperCase() !== DEVICE_NAME && b.name.toLocaleUpperCase() === DEVICE_NAME) {\n          return 1\n        }\n        else {\n          return 0\n        }\n      })\n      .map((e) => {\n        return {\n          ...e,\n          signal: Math.abs(100 + e.RSSI),\n        }\n      })\n  })\n\n  /**\n   * \u84dd\u7259\u6743\u9650\n   */\n  const bluetoothPermissions = ref(false)\n\n  /**\n   * \u8bbe\u5907\u84dd\u7259\u662f\u6253\u5f00\uff1f\n   */\n  const bluetoothAvailable = ref(false)\n  /**\n   * \u5df2\u94fe\u63a5\u7684\u8bbe\u5907\n   */\n  const connectedDevice = ref<DeviceType>()\n  /**\n   * \u662f\u5426\u626b\u63cf\n   */\n  const discoveryStarted = ref(false)\n  /**\n   * \u7279\u5f81\u503c\u5217\u8868\n   */\n  const chs = ref<{ uuid: string, value: any }[]>([])\n  /**\n   * \u662f\u5426\u53ef\u4ee5\u5199\u5165\n   */\n  const canWrite = ref(false)\n\n  /**\n   * \u83b7\u53d6\u84dd\u7259\u6388\u6743\n   * @param authorize \u662f\u5426\u9700\u8981\u8df3\u8f6c\u6388\u6743 true \u8c03\u7528 uni.authorize\n   */\n  function getBluetoothPermissions(authorize = false) {\n    return uni.getSetting()\n      .then((res) => {\n      // \u672a\u6388\u6743\u72b6\u6001\n        const authSetting = res.authSetting as unknown as Record<string, boolean>\n        // eslint-disable-next-line no-prototype-builtins\n        if (authSetting.hasOwnProperty('scope.bluetooth')\n          && authSetting['scope.bluetooth'] === true) {\n          bluetoothPermissions.value = true\n        }\n        else {\n          if (authorize) {\n            console.log('\u672a\u6388\u6743 \u5411 \u7528\u6237\u53d1\u8d77\u6388\u6743\u8bf7\u6c42')\n            return uni.authorize({\n              scope: 'scope.bluetooth',\n            })\n          }\n          else {\n            bluetoothPermissions.value = false\n            console.log('false 111')\n          }\n        }\n      })\n      .then((res) => {\n        console.log('getBluetoothPermissions [then] authorize', res)\n        /**\n         * uni.authorize \u6210\u529f\uff01\n         */\n        if (res !== undefined) {\n          bluetoothPermissions.value = true\n        }\n      })\n      .catch((error) => {\n        console.log('getBluetoothPermissions [error]', error)\n        bluetoothPermissions.value = false\n      })\n  }\n\n  /**\n   * \u6253\u5f00\u6388\u6743\u8bbe\u7f6e\n   */\n  function authorizeBluetooth() {\n    uni.openSetting({\n      withSubscriptions: true,\n    })\n  }\n\n  /**\n   * \u5f00\u59cb\u626b\u63cf\n   */\n  async function openBluetoothAdapter() {\n    /**\n     * \u521d\u59cb\u5316\u84dd\u7259\u6a21\u5757\n     */\n    console.log('[\u521d\u59cb\u5316\u84dd\u7259\u6a21\u5757]')\n    return uni.openBluetoothAdapter()\n      .then(() => {\n        console.log('[\u5f00\u59cb\u641c\u5bfb\u9644\u8fd1\u7684\u84dd\u7259\u5916\u56f4\u8bbe\u5907]')\n        return startBluetoothDevicesDiscovery()\n      })\n      .catch((e) => {\n        console.log('[\u521d\u59cb\u5316\u84dd\u7259\u6a21\u5757] [\u5f00\u59cb\u641c\u5bfb\u9644\u8fd1\u7684\u84dd\u7259\u5916\u56f4\u8bbe\u5907] error', e)\n        console.log(e.errno)\n        if (e.errCode === 10001) {\n          bluetoothAvailable.value = false\n          watchBluetoothAdapterStateChange((res) => {\n            if (res.available) {\n              return startBluetoothDevicesDiscovery()\n            }\n            else {\n              resetStatus()\n            }\n          })\n        }\n        else if (e.errno === 1509008) {\n          closeBluetoothAdapter()\n          throw new Error('\u8bf7\u6253\u5f00[\u5fae\u4fe1]\u4f4d\u7f6e\u6743\u9650\u540e\u91cd\u8bd5')\n        }\n        else {\n          handleError(e)\n        }\n      })\n  }\n  /**\n   *  \u5f00\u59cb\u641c\u5bfb\u9644\u8fd1\u7684\u84dd\u7259\u5916\u56f4\u8bbe\u5907\n   */\n  function startBluetoothDevicesDiscovery() {\n    console.log('\u5f00\u59cb\u641c\u5bfb\u9644\u8fd1\u7684\u84dd\u7259\u5916\u56f4\u8bbe\u5907 >>> \u5f53\u524d\u626b\u63cf\u72b6\u6001', discoveryStarted.value)\n    if (discoveryStarted.value)\n      return\n    discoveryStarted.value = true\n    console.log('\u5f00\u59cb\u641c\u5bfb\u9644\u8fd1\u7684\u84dd\u7259\u5916\u56f4\u8bbe\u5907 >>> start')\n    return uni.stopBluetoothDevicesDiscovery()\n      .then(() => {\n        return uni.startBluetoothDevicesDiscovery({\n          allowDuplicatesKey: true,\n        })\n      })\n      .then((res) => {\n        console.log('\u5f00\u59cb\u641c\u5bfb\u9644\u8fd1\u7684\u84dd\u7259\u5916\u56f4\u8bbe\u5907 success', res)\n        onBluetoothDeviceFound()\n      })\n  }\n\n  /**\n   * \u76d1\u542c\u641c\u7d22\u5230\u65b0\u8bbe\u5907\u7684\u4e8b\u4ef6\n   */\n  function onBluetoothDeviceFound() {\n    uni.onBluetoothDeviceFound((res) => {\n      for (let index = 0; index < res.devices.length; index++) {\n        const device = res.devices[index]\n\n        if (!device.name && !device.localName)\n          break\n        const macAddress = macRecord[device.deviceId]\n        const foundDevices = [...devices.value]\n        const idx = foundDevices\n          .map(e => e.deviceId)\n          .findIndex(deviceId => deviceId === device.deviceId)\n        /**\n         * \u6dfb\u52a0\u84dd\u7259\n         */\n        if (idx === -1) {\n          devices.value.push({\n            ...device,\n            macAddress,\n          })\n        }\n        else {\n          devices.value[idx] = {\n            ...device,\n            macAddress,\n          }\n        }\n      }\n    })\n  }\n  /**\n   * \u505c\u6b62\u626b\u63cf\n   */\n  async function stopBluetoothDevicesDiscovery() {\n    try {\n      await uni.stopBluetoothDevicesDiscovery()\n      discoveryStarted.value = false\n      console.log('\u505c\u6b62\u626b\u63cf')\n    }\n    catch (error) {\n      handleError(error)\n    }\n  }\n  /**\n   * \u6253\u5f00\u6216\u8005\u5f00\u542f\u84dd\u7259\u626b\u63cf\n   */\n  async function openOrCloseDevicesDiscovery() {\n    try {\n      if (discoveryStarted.value) {\n        console.log('[\u6253\u5f00\u6216\u8005\u5f00\u542f\u84dd\u7259\u626b\u63cf]', '\u505c\u6b62')\n        await stopBluetoothDevicesDiscovery()\n      }\n      else {\n        console.log('[\u6253\u5f00\u6216\u8005\u5f00\u542f\u84dd\u7259\u626b\u63cf]', '\u6253\u5f00')\n        await openBluetoothAdapter()\n      }\n    }\n    catch (error) {\n      console.log('\u6253\u5f00\u6216\u8005\u5f00\u542f\u84dd\u7259\u626b\u63cf', error)\n      handleError(error)\n    }\n  }\n\n  /**\n   * \u8fde\u63a5\u4f4e\u529f\u8017\u84dd\u7259\u8bbe\u5907\n   * @param ds\n   */\n  async function createBLEConnection(ds: DeviceType, autoGetBLEDeviceServices = true) {\n    console.log('\u8fde\u63a5\u4f4e\u529f\u8017\u84dd\u7259\u8bbe\u5907')\n    return closeBLEConnection()\n      .then(() => {\n        console.log('\u5148\u505c\u6b62\u626b\u63cf')\n        return stopBluetoothDevicesDiscovery()\n      })\n      .then(() => {\n        return ds.deviceId\n      })\n      .then((deviceId) => {\n        console.log('createBLEConnection \u8fde\u63a5\u4f4e\u529f\u8017\u84dd\u7259\u8bbe\u5907')\n        return uni.createBLEConnection({ deviceId })\n      })\n      .then(() => {\n        connectedDevice.value = ds\n        connected.value = true\n        autoGetBLEDeviceServices && getBLEDeviceServices(ds.deviceId)\n        return ds.deviceId\n      })\n      .catch((e) => {\n        handleError(e)\n      })\n  }\n\n  /**\n   * \u76d1\u542c\u84dd\u7259\u4f4e\u529f\u8017\u8fde\u63a5\u72b6\u6001\u6539\u53d8\u4e8b\u4ef6\u3002\u5305\u62ec\u5f00\u53d1\u8005\u4e3b\u52a8\u8fde\u63a5\u6216\u65ad\u5f00\u8fde\u63a5\uff0c\u8bbe\u5907\u4e22\u5931\uff0c\u8fde\u63a5\u5f02\u5e38\u65ad\u5f00\u7b49\u7b49\n   */\n  function watchBLEConnectionStateChange() {\n    return uni.onBLEConnectionStateChange((res) => {\n      console.log('==> watchBLEConnectionStateChange', res)\n      if (res.connected === false) {\n        connected.value = false\n        if (connectedDevice.value) {\n          connectedDevice.value = undefined\n          showToastError('\u8bbe\u5907\u5df2\u65ad\u5f00\u8fde\u63a5')\n        }\n        // closeBluetoothAdapter();\n      }\n    })\n  }\n\n  /**\n   * \u83b7\u53d6\u84dd\u7259\u8bbe\u5907\u7684\u6240\u6709\u670d\u52a1\n   * @param deviceId\n   */\n  function getBLEDeviceServices(deviceId: string) {\n    return uni.getBLEDeviceServices({\n      deviceId,\n    }).then((res) => {\n      for (let i = 0; i < res.services.length; i++) {\n        if (res.services[i].isPrimary) {\n          getBLEDeviceCharacteristics(deviceId, res.services[i].uuid)\n          return\n        }\n      }\n    }).catch((e) => {\n      handleError(e)\n    })\n  }\n\n  /**\n   * \u83b7\u53d6\u84dd\u7259\u8bbe\u5907\u6307\u5b9a\u670d\u52a1\u4e2d\u6240\u6709\u7279\u5f81\u503c\n   * @param deviceId\n   * @param serviceId\n   */\n  function getBLEDeviceCharacteristics(deviceId: string, serviceId: string) {\n    uni.getBLEDeviceCharacteristics({\n      deviceId,\n      serviceId,\n    }).then((res) => {\n      for (let i = 0; i < res.characteristics.length; i++) {\n        const item = res.characteristics[i]\n        if (item.properties.read) {\n          uni\n            .readBLECharacteristicValue({\n              deviceId,\n              serviceId,\n              characteristicId: item.uuid,\n            })\n        }\n\n        if (item.properties.notify || item.properties.indicate) {\n          uni.notifyBLECharacteristicValueChange({\n            deviceId,\n            serviceId,\n            characteristicId: item.uuid,\n            state: true,\n          })\n        }\n      }\n    }).catch((e) => {\n      handleError(e)\n    })\n  }\n\n  /**\n   * \u65ad\u5f00\u4e0e\u4f4e\u529f\u8017\u84dd\u7259\u8bbe\u5907\u7684\u8fde\u63a5\n   */\n  function closeBLEConnection() {\n    return new Promise((resolve, reject) => {\n      if (connectedDevice.value) {\n        uni.closeBLEConnection({\n          deviceId: connectedDevice.value.deviceId,\n        }).then(() => {\n          connectedDevice.value = undefined\n          chs.value = []\n          canWrite.value = false\n          console.log('\u65ad\u5f00\u4e0e\u4f4e\u529f\u8017\u84dd\u7259\u8bbe\u5907\u7684\u8fde\u63a5 >>>  success')\n          resolve('')\n        }).catch((e) => {\n          reject(e)\n        })\n      }\n      else {\n        console.log('\u65ad\u5f00\u4e0e\u4f4e\u529f\u8017\u84dd\u7259\u8bbe\u5907\u7684\u8fde\u63a5 >>> \u6ca1\u6709\u8fde\u63a5\u7684\u8bbe\u5907 \u76f4\u63a5\u65ad\u5f00')\n        resolve('')\n      }\n    })\n  }\n\n  /**\n   * \u76d1\u542c\u84dd\u7259\u4f4e\u529f\u8017\u8bbe\u5907\u7684\u7279\u5f81\u503c\u53d8\u5316\u4e8b\u4ef6\n   */\n  function watchBLECharacteristicValueChange() {\n    uni.onBLECharacteristicValueChange((characteristic) => {\n      const idx = chs.value.findIndex(\n        e => e.uuid === characteristic.characteristicId,\n      )\n      if (idx === -1) {\n        chs.value.push({\n          uuid: characteristic.characteristicId,\n          value: ab2hex(characteristic.value),\n        })\n      }\n      else {\n        chs.value[idx] = {\n          uuid: characteristic.characteristicId,\n          value: ab2hex(characteristic.value),\n        }\n      }\n    })\n  }\n\n  /**\n   *  \u65ad\u5f00\u6216\u8005\u8fde\u63a5\u84dd\u7259\u8bbe\u5907\n   * @param _device\n   */\n  async function handleToggleBluetoothDevice(_device: DeviceType) {\n    // \u84dd\u7259\u5df2\u6388\u6743 \u4e14 \u641c\u5bfb\u5230\u8bbe\u5907\u5217\u8868 \u8fde\u63a5\u8bbe\u5907\n    showLoading()\n    try {\n      if (connectedDevice.value) {\n        await closeBLEConnection()\n      }\n      else {\n        await createBLEConnection(_device)\n      }\n      hideLoading()\n    }\n    catch (e: any) {\n      if (e?.errCode === 10003) {\n        showToastError('\u8bbe\u5907\u8fde\u63a5\u5931\u8d25\uff01')\n      }\n      else {\n        handleError(e)\n      }\n    }\n  }\n\n  /**\n   * \u76d1\u542c\u84dd\u7259\u7279\u5f81\u503c\u53d8\u5316\n   * @param cb\n   */\n  function onBLECharacteristicValueChange(cb: (data: { uuid: string, value: any }) => void) {\n    uni.onBLECharacteristicValueChange((characteristic) => {\n      cb?.({\n        uuid: characteristic.characteristicId,\n        value: ab2hex(characteristic.value),\n      })\n    })\n  }\n\n  /**\n   * \u7ed3\u675f\n   */\n  function closeBluetoothAdapter() {\n    console.log('\u7ed3\u675f')\n    uni.offBluetoothDeviceFound()\n    uni.offBluetoothAdapterStateChange()\n    uni.closeBluetoothAdapter()\n    resetStatus()\n  }\n\n  function resetStatus() {\n    console.log('resetStatus >>> ')\n    bluetoothAvailable.value = false\n    connectedDevice.value = undefined\n    discoveryStarted.value = false\n    chs.value = []\n    canWrite.value = false\n  }\n\n  /**\n   * \u76d1\u542c\u84dd\u7259\u9002\u914d\u5668\u72b6\u6001\u53d8\u5316\u4e8b\u4ef6 \u65ad\u5f00\n   */\n  function watchBluetoothAdapterStateChange(cb?: (res: UniApp.OnBluetoothAdapterStateChangeResult) => void) {\n    uni.offBluetoothAdapterStateChange()\n    uni.onBluetoothAdapterStateChange((res) => {\n      console.log('watchBluetoothAdapterStateChange')\n      if (!res.available) {\n        resetStatus()\n      }\n      else {\n        console.log('watchBluetoothAdapterStateChange ==> bluetoothAvailable.value >>> true')\n        bluetoothAvailable.value = true\n      }\n      cb?.(res)\n    })\n  }\n\n  function getMacAddr() {\n    if (isAndroid)\n      return\n    console.log(['getMacAddr getMacAddr getMacAddr getMacAddr getMacAddr getMacAddr getMacAddr getMacAddr '])\n    uni.getBluetoothDevices().then((res) => {\n      const _devices = res.devices.filter(d => d.name.toLocaleUpperCase() === DEVICE_NAME)\n      console.log('_devices', _devices)\n      for (let i = 0; i < _devices.length; i++) {\n        const e = _devices[i]\n        // if (macRecord[e.deviceId]) {\n        //   console.log(macRecord[e.deviceId], 'break');\n        //   break;\n        // }\n\n        if (e.advertisData) {\n          const byteArray = new Uint8Array(e.advertisData)\n          const macAddress = Array.from(byteArray)\n            .map(byte => byte.toString(16).toUpperCase().padStart(2, '0'))\n            .reverse()\n            .join(':')\n\n          macRecord[e.deviceId] = macAddress\n          const index = devices.value.findIndex(d => d.deviceId === e.deviceId)\n          if (index !== -1) {\n            devices.value[index].macAddress = macAddress\n          }\n        }\n      }\n    })\n  }\n\n  function init() {\n    watchBluetoothAdapterStateChange()\n\n    watchBLECharacteristicValueChange()\n\n    watchBLEConnectionStateChange()\n  }\n\n  const _getMacAddr = throttle(getMacAddr, 500)\n  watch(devices.value, _getMacAddr, { deep: true, immediate: true })\n\n  init()\n\n  return {\n    /**\n     * \u5f00\u59cb\u626b\u63cf\u84dd\u7259\n     */\n    openBluetoothAdapter,\n    /**\n     * \u505c\u6b62\u626b\u63cf\u84dd\u7259\n     */\n    stopBluetoothDevicesDiscovery,\n    /**\n     * \u7ed3\u675f\u84dd\u7259\u6d41\u7a0b\n     */\n    closeBluetoothAdapter,\n    /**\n     * \u8fde\u63a5\u4f4e\u529f\u8017\u84dd\u7259\u8bbe\u5907\n     */\n    createBLEConnection,\n    /**\n     * \u65ad\u5f00\u4e0e\u4f4e\u529f\u8017\u84dd\u7259\u8bbe\u5907\u7684\u8fde\u63a5\n     */\n    closeBLEConnection,\n    /**\n     * \u83b7\u53d6\u84dd\u7259\u8bbe\u5907\u7684\u6240\u6709\u670d\u52a1\n     */\n    getBLEDeviceServices,\n    /**\n     * \u6253\u5f00\u6216\u8005\u5173\u95ed\u84dd\u7259\u626b\u63cf\n     */\n    openOrCloseDevicesDiscovery,\n    /**\n     * \u83b7\u53d6\u84dd\u7259\u6388\u6743\n     * @param authorize \u662f\u5426\u9700\u8981\u8df3\u8f6c\u6388\u6743 true \u8c03\u7528 uni.authorize\n     */\n    getBluetoothPermissions,\n    /**\n     * \u6253\u5f00\u6388\u6743\u8bbe\u7f6e\n     */\n    authorizeBluetooth,\n    /**\n     *  \u65ad\u5f00\u6216\u8005\u8fde\u63a5\u84dd\u7259\u8bbe\u5907\n     * @param _device\n     */\n    handleToggleBluetoothDevice,\n    /**\n     * \u76d1\u542c\u4f4e\u529f\u8017\u84dd\u7259\u8bbe\u5907\u7684\u7279\u5f81\u503c\u53d8\u5316\u4e8b\u4ef6\n     */\n    onBLECharacteristicValueChange,\n    /**\n     * \u84dd\u7259\u6743\u9650\n     */\n    bluetoothPermissions,\n\n    /**\n     * \u8bbe\u5907\u84dd\u7259\u662f\u6253\u5f00\uff1f\n     */\n    bluetoothAvailable,\n    /**\n     * \u8bbe\u5907 \u6309\u7167\u4fe1\u53f7\u5f3a\u5ea6\u6392\u5e8f\n     */\n    devicesSortBySignal,\n    /**\n     * \u5df2\u94fe\u63a5\u7684\u8bbe\u5907\n     */\n    connectedDevice,\n    /**\n     * \u7279\u5f81\u503c\u5217\u8868\n     */\n    chs,\n    /**\n     * \u8bbe\u5907\n     */\n    devices,\n    /**\n     * \u662f\u5426\u6a21\u62df\u5668\n     */\n    isDevtools,\n    /**\n     * \u662f\u5426\u8fde\u63a5\n     */\n    connected,\n    /**\n     * \u662f\u5426\u626b\u63cfing\n     */\n    discoveryStarted,\n  }\n})\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},6599:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var o=t(758);const r={},i=o.createContext(r);function c(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);