"use strict";(self.webpackChunkzhuddan_github_io=self.webpackChunkzhuddan_github_io||[]).push([[2258],{7371:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"vscode/settings","title":"vscode \u8bbe\u7f6e","description":"","source":"@site/archived/vscode/settings.md","sourceDirName":"vscode","slug":"/vscode/settings","permalink":"/docs/vscode/settings","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"archived","previous":{"title":"\u4f7f\u7528cmder\u7ec8\u7aef","permalink":"/docs/vscode/cmder"},"next":{"title":"\u5f7b\u5e95\u5378\u8f7dvscode","permalink":"/docs/vscode/uninstall"}}');var t=r(6070),c=r(2790);const s={},i="vscode \u8bbe\u7f6e",a={},l=[];function g(n){const e={code:"code",h1:"h1",header:"header",pre:"pre",...(0,c.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"vscode-\u8bbe\u7f6e",children:"vscode \u8bbe\u7f6e"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-jsonc",children:'// cspell:disable\r\n{\r\n  // ========== Visuals ==========\r\n  "editor.cursorSmoothCaretAnimation": "on",\r\n  // "editor.guides.bracketPairs": "active",\r\n  // "editor.lineNumbers": "interval",\r\n  // "editor.renderWhitespace": "boundary",\r\n  "window.autoDetectColorScheme": true,\r\n  "window.zoomLevel": 2,\r\n  "workbench.editor.tabActionLocation": "right",\r\n  "workbench.list.smoothScrolling": true,\r\n  "workbench.startupEditor": "welcomePage",\r\n  "workbench.tree.expandMode": "singleClick",\r\n  "workbench.tree.indent": 10,\r\n  "workbench.preferredLightColorTheme": "Default Dark+",\r\n  // ========== Editor ==========\r\n  "debug.onTaskErrors": "debugAnyway",\r\n  "diffEditor.ignoreTrimWhitespace": false,\r\n  // "editor.wordSeparators": "`~!@#%^&*()=+[{]}\\\\|;:\'\\",.<>/?",\r\n  "editor.find.addExtraSpaceOnTop": false,\r\n  "editor.inlineSuggest.enabled": true,\r\n  // "editor.multiCursorModifier": "ctrlCmd",\r\n  "editor.suggestSelection": "first",\r\n  "editor.tabSize": 2,\r\n  "editor.unicodeHighlight.invisibleCharacters": false,\r\n  "editor.stickyScroll.enabled": true,\r\n  "editor.hover.sticky": true,\r\n  "editor.codeActionsOnSave": {\r\n    "source.fixAll": "never",\r\n    "source.fixAll.eslint": "explicit",\r\n    "source.organizeImports": "never"\r\n  },\r\n  "editor.wordWrapColumn": 150,\r\n  "editor.wordWrap": "bounded",\r\n  "explorer.confirmDelete": false,\r\n  "explorer.confirmDragAndDrop": false,\r\n  "files.eol": "\\n",\r\n  "files.insertFinalNewline": true,\r\n  "files.simpleDialog.enable": true,\r\n  "files.associations": {\r\n    ".env*": "dotenv"\r\n  },\r\n  // \u81ea\u52a8\u63a8\u6d4b\u7f16\u7801\u6a21\u5f0f\r\n  "files.autoGuessEncoding": true,\r\n  "git.autofetch": true,\r\n  "git.confirmSync": false,\r\n  "git.enableSmartCommit": true,\r\n  // "git.untrackedChanges": "separate",\r\n  "scm.diffDecorationsGutterWidth": 2,\r\n  // ========== terminal ==========\r\n  "terminal.integrated.cursorStyle": "line",\r\n  "terminal.integrated.fontWeight": "300",\r\n  "terminal.integrated.persistentSessionReviveProcess": "never",\r\n  "terminal.integrated.tabs.enabled": true,\r\n  "terminal.integrated.cursorBlinking": true,\r\n  "terminal.integrated.defaultProfile.windows": "Command Prompt",\r\n  "terminal.integrated.profiles.windows": {\r\n    "PowerShell": {\r\n      "source": "PowerShell",\r\n      "icon": "terminal-powershell"\r\n    },\r\n    "Command Prompt": {\r\n      "path": [\r\n        "${env:windir}\\\\Sysnative\\\\cmd.exe",\r\n        "${env:windir}\\\\System32\\\\cmd.exe"\r\n      ],\r\n      "args": [\r\n        "/k D:\\\\cmder\\\\vendor\\\\init.bat"\r\n      ],\r\n      "icon": "terminal-cmd"\r\n    },\r\n    "Git Bash": {\r\n      "source": "Git Bash"\r\n    },\r\n    "cmder": {\r\n      "path": "C:\\\\WINDOWS\\\\System32\\\\cmd.exe",\r\n      "args": [\r\n        "/k D:\\\\cmder\\\\vendor\\\\init.bat"\r\n      ]\r\n    }\r\n  },\r\n  "workbench.editor.closeOnFileDelete": true,\r\n  "workbench.editor.highlightModifiedTabs": true,\r\n  "workbench.editor.limit.enabled": true,\r\n  "workbench.editor.limit.perEditorGroup": true,\r\n  "workbench.editor.limit.value": 5,\r\n  "workbench.iconTheme": "vscode-icons",\r\n  "workbench.experimental.enableNewProfilesUI": true,\r\n  "search.exclude": {\r\n    "**/*.snap": true,\r\n    "**/*.svg": true,\r\n    "**/.git": true,\r\n    "**/.github": false,\r\n    "**/.nuxt": true,\r\n    "**/.output": true,\r\n    "**/.pnpm": true,\r\n    "**/.vscode": true,\r\n    "**/.yarn": true,\r\n    "**/assets": true,\r\n    "**/bower_components": true,\r\n    "**/dist/**": true,\r\n    "**/logs": true,\r\n    "**/node_modules": true,\r\n    "**/out/**": true,\r\n    "**/package-lock.json": true,\r\n    "**/pnpm-lock.yaml": true,\r\n    "**/public": true,\r\n    "**/temp": true,\r\n    "**/yarn.lock": true,\r\n    "**/CHANGELOG*": true,\r\n    "**/LICENSE*": true\r\n  },\r\n  // ==========  Global Level Config, needs to put in User Settings ==========\r\n  "window.dialogStyle": "custom",\r\n  "window.title": "${rootName}", // this make tabs more readable\r\n  "window.titleBarStyle": "custom",\r\n  "extensions.autoUpdate": false,\r\n  // ========== Extension configs ==========\r\n  "emmet.showSuggestionsAsSnippets": true,\r\n  "emmet.triggerExpansionOnTab": false,\r\n  "errorLens.enabledDiagnosticLevels": [\r\n    "warning",\r\n    "error"\r\n  ],\r\n  "errorLens.excludeBySource": [\r\n    "cSpell",\r\n    "Grammarly",\r\n    "eslint"\r\n  ],\r\n  // react-hooks \u9700\u8981false\r\n  // "eslint.quiet": false,\r\n  // Silent the stylistic rules in you IDE, but still auto fix them\r\n  // "eslint.rules.customizations": [\r\n  //   { "rule": "style/*", "severity": "off" },\r\n  //   { "rule": "format/*", "severity": "off" },\r\n  //   { "rule": "*-indent", "severity": "off" },\r\n  //   { "rule": "*-spacing", "severity": "off" },\r\n  //   { "rule": "*-spaces", "severity": "off" },\r\n  //   { "rule": "*-order", "severity": "off" },\r\n  //   { "rule": "*-dangle", "severity": "off" },\r\n  //   { "rule": "*-newline", "severity": "off" },\r\n  //   { "rule": "*quotes", "severity": "off" },\r\n  //   { "rule": "*semi", "severity": "off" }\r\n  // ],\r\n  "eslint.validate": [\r\n    "javascript",\r\n    "javascriptreact",\r\n    "typescript",\r\n    "typescriptreact",\r\n    "vue"\r\n    // "html",\r\n    // "markdown",\r\n    // "jsonc"\r\n    // "json",\r\n    // "yaml",\r\n    // "toml"\r\n  ],\r\n  // "github.copilot.enable": {\r\n  //   "*": true,\r\n  //   "markdown": true,\r\n  //   "plaintext": false,\r\n  // },\r\n  // ========== cSpell ==========\r\n  "cSpell.allowCompoundWords": true,\r\n  "cSpell.language": "en,en-US",\r\n  "cSpell.ignorePaths": [\r\n    "package.json"\r\n  ],\r\n  "css.lint.hexColorLength": "ignore",\r\n  "githubIssues.workingIssueFormatScm": "#${issueNumberLabel}",\r\n  "githubPullRequests.fileListLayout": "tree",\r\n  "gitlens.codeLens.authors.enabled": false,\r\n  "gitlens.codeLens.enabled": false,\r\n  "gitlens.codeLens.recentChange.enabled": false,\r\n  "gitlens.menus": {\r\n    "editor": {\r\n      "blame": false,\r\n      "clipboard": true,\r\n      "compare": true,\r\n      "history": false,\r\n      "remote": false\r\n    },\r\n    "editorGroup": {\r\n      "blame": true,\r\n      "compare": false\r\n    },\r\n    "editorTab": {\r\n      "clipboard": true,\r\n      "compare": true,\r\n      "history": true,\r\n      "remote": true\r\n    },\r\n    "explorer": {\r\n      "clipboard": true,\r\n      "compare": true,\r\n      "history": true,\r\n      "remote": true\r\n    },\r\n    "scm": {\r\n      "authors": true\r\n    },\r\n    "scmGroup": {\r\n      "compare": true,\r\n      "openClose": true,\r\n      "stash": true\r\n    },\r\n    "scmGroupInline": {\r\n      "stash": true\r\n    },\r\n    "scmItem": {\r\n      "clipboard": true,\r\n      "compare": true,\r\n      "history": true,\r\n      "remote": false,\r\n      "stash": true\r\n    }\r\n  },\r\n  // "i18n-ally.autoDetection": false,\r\n  // "i18n-ally.displayLanguage": "en",\r\n  // "i18n-ally.ignoredLocales": [],\r\n  // "iconify.annotations": true,\r\n  // "iconify.inplace": true,\r\n  "svg.preview.mode": "svg",\r\n  // I only use Prettier for manually formatting\r\n  "prettier.enable": false,\r\n  "prettier.printWidth": 200,\r\n  "prettier.semi": false,\r\n  "prettier.singleQuote": true,\r\n  // ========== File Nesting ==========\r\n  // this might not be up to date with the repo, please check yourself\r\n  // https://github.com/antfu/vscode-file-nesting-config\r\n  "explorer.fileNesting.enabled": true,\r\n  "explorer.fileNesting.expand": false,\r\n  "explorer.fileNesting.patterns": {\r\n    "*.asax": "$(capture).*.cs, $(capture).*.vb",\r\n    "*.ascx": "$(capture).*.cs, $(capture).*.vb",\r\n    "*.ashx": "$(capture).*.cs, $(capture).*.vb",\r\n    "*.aspx": "$(capture).*.cs, $(capture).*.vb",\r\n    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",\r\n    "*.c": "$(capture).h",\r\n    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",\r\n    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",\r\n    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",\r\n    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",\r\n    "*.cs": "$(capture).*.cs",\r\n    "*.cshtml": "$(capture).cshtml.cs",\r\n    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",\r\n    "*.css": "$(capture).css.map, $(capture).*.css",\r\n    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",\r\n    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",\r\n    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",\r\n    "*.go": "$(capture)_test.go",\r\n    "*.java": "$(capture).class",\r\n    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js,$(capture).d.ts*",\r\n    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx",\r\n    "*.master": "$(capture).*.cs, $(capture).*.vb",\r\n    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",\r\n    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",\r\n    "*.pubxml": "$(capture).pubxml.user",\r\n    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",\r\n    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",\r\n    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",\r\n    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx",\r\n    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",\r\n    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",\r\n    "*.xaml": "$(capture).xaml.cs",\r\n    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",\r\n    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",\r\n    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",\r\n    ".env": "*.env, .env.*, .envrc, env.d.ts",\r\n    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",\r\n    ".project": ".classpath",\r\n    "//": "Last update at 4/29/2023, 2:04:58 PM",\r\n    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",\r\n    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",\r\n    "I*.cs": "$(capture).cs",\r\n    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",\r\n    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",\r\n    "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",\r\n    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",\r\n    "default.nix": "shell.nix",\r\n    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",\r\n    "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",\r\n    "flake.nix": "flake.lock",\r\n    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",\r\n    "gemfile": ".ruby-version, gemfile.lock",\r\n    "go.mod": ".air*, go.sum",\r\n    "go.work": "go.work.sum",\r\n    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",\r\n    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",\r\n    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",\r\n    "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",\r\n    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",\r\n    "pyproject.toml": ".pdm.toml, pdm.lock, pyproject.toml",\r\n    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",\r\n    "readme*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",\r\n    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",\r\n    "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",\r\n    "shims.d.ts": "*.d.ts",\r\n    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, webpack.config.*, windi.config.*",\r\n    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",\r\n    "electron.vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*,electron.vite.config.*.mjs",\r\n    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"\r\n  },\r\n  "vsicons.associations.files": [\r\n    {\r\n      "icon": "rollup",\r\n      "extensions": [\r\n        "rollup.config.build.mjs"\r\n      ],\r\n      "filename": true\r\n    },\r\n    {\r\n      "icon": "rollup",\r\n      "extensions": [\r\n        "rollup.config.*.mjs"\r\n      ],\r\n      "filename": true\r\n    }\r\n  ],\r\n  // tailwind css\r\n  "editor.quickSuggestions": {\r\n    "strings": "on"\r\n  },\r\n  // ========== vetur (vue2 only) ==========\r\n  "vetur.experimental.templateInterpolationService": false,\r\n  "vetur.validation.template": false,\r\n  "vetur.validation.script": false,\r\n  "tabnine.experimentalAutoImports": true,\r\n  "workbench.editorAssociations": {\r\n    "*.xls": "default"\r\n  },\r\n  "remote.extensionKind": {\r\n    "GitHub.copilot": [\r\n      "ui"\r\n    ],\r\n    "github.copilot-chat": [\r\n      "ui"\r\n    ]\r\n  },\r\n  // markdown-pdf\r\n  "markdown-pdf.displayHeaderFooter": false,\r\n  "markdown-pdf.outputDirectory": "./pdf",\r\n  "markdown-pdf.outputDirectoryRelativePathFile": true,\r\n  "makefile.configureOnOpen": false,\r\n  "database-client.autoSync": true,\r\n  "remote.SSH.remotePlatform": {\r\n    "\u9c7c\u7384\u673a": "linux"\r\n  },\r\n  "gitlens.views.scm.grouped.views": {\r\n    "commits": false,\r\n    "branches": false,\r\n    "remotes": false,\r\n    "stashes": false,\r\n    "tags": false,\r\n    "worktrees": false,\r\n    "contributors": false,\r\n    "repositories": false,\r\n    "searchAndCompare": false,\r\n    "launchpad": false\r\n  }\r\n}\n'})})]})}function p(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(g,{...n})}):g(n)}},2790:(n,e,r)=>{r.d(e,{R:()=>s,x:()=>i});var o=r(758);const t={},c=o.createContext(t);function s(n){const e=o.useContext(c);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:s(n.components),o.createElement(c.Provider,{value:e},n.children)}}}]);